<?php
/**
 * @file modelreview.install
 * Install and uninstall procedures
 */

/**
 * Implementation of hook_install
 */
function modelreview_install() {
  $sql = "INSERT INTO {modelreview_actiondesc} (`statusid`, `status`) VALUES
    (10, 'Review Requested'),
    (20, 'Invite Reviewer'),
    (23, 'Reviewer Declined Case'),
    (25, 'Reviewer Accepted Case'),
    (30, 'Review Completed'),
    (40, 'Return to Author for Revision'),
    (50, 'Revision Completed, Re-Review Requested'),
    (60, 'Review Closed - Model Certified'),
    (70, 'Review Closed - Certification Denied');";

  db_query($sql);

  $sql = "INSERT INTO {modelreview_compliance} (`cid`, `compliance`) VALUES
    (0, 'Does Not Meet Standards'),
    (1, 'Partially Meets Standards'),
    (2, 'Fully Meets Standards');";

  db_query($sql);

  $sql = "INSERT INTO {modelreview_recommend} (`id`, `recommendation`) VALUES
    (0, 'Do Not Certify (Deny)'),
    (1, 'Revise (Return to Author)'),
    (2, 'Certify (Accept)');";

  db_query($sql);

  $sql = "INSERT INTO {modelreview_messages} (`name`, `destination`, `destination_type`, `subject`, `body`) VALUES
    ('review_requested', 'comses editor manager', 'role', 'Model Review has been requested', ''),
    ('invite_reviewer', 'comses reviewer', 'role', 'OpenABM Model for Review: [modelreview:modeltitle]', ''),
    ('review_declined', 'comses editor manager', 'role', 'Reviewer has declined Model Review case', ''),
    ('review_accepted', 'comses editor manager', 'role', 'Reviewer has accepted Model Review case', ''),
    ('review_completed', 'comses editor manager', 'role', 'Model Review has been completed', ''),
    ('cert_denied', 'author', 'role', 'Model Review has been completed, Certification Denied', ''),
    ('revision_needed', 'author', 'role', 'Model Review has been completed, Revisions Requested', ''),
    ('cert_accepted', 'author', 'role', 'Model Review has been completed, Certified', ''),
    ('rev_rereview', 'comses reviewer', 'role', 'Your Model Review Case requires a Re-Revie', ''),
    ('ed_rereview', 'comses editor manager', 'role', 'Model Re-Review has been requested', '');";

  db_query($sql);

  $sql = "INSERT INTO `modelreview_messages` (`name`, `recipient`, `recipient_type`, `subject`, `body`) VALUES
  ('cert_accepted', 'author', 'user', 'Model Review has been completed, Certified', 'The model review case for your model, [modelreview:modeltitle], has been completed by a CoMSES Reviewer. After reviewing your case, your model has been determined to meet CoMSES Modeling Best-Practices and is now Certified. You may access this review case by visiting the Model Review Status Page at: [modelreview:statusurl]'),
  ('cert_denied', 'author', 'user', 'Model Review has been completed, Certification Denied', 'The model review case for your model, [modelreview:modeltitle], has been completed by a CoMSES Reviewer. Unfortunately, After reviewing your case, your model has been determined to meet CoMSES Modeling Best-Practices and your model cannot be certified. For more information on this please visit the Model Review Status Page at: [modelreview:statusurl]'),
  ('editor_rereview', 'manage review', 'perm', 'Model Re-Review has been requested', 'The author of the model, [modelreview:modeltitle], has completed requested revisions and has requested a Re-Review of their model. The assigned Reviewer has been notified that they need to complete the Re-Review. You may access this case by visiting: [modelreview:statusurl]'),
  ('invite_reviewer', 'reviewer', 'user', 'OpenABM Model for Review: [modelreview:modeltitle]', '<p>Dear CoMSES Member,</p>\n\n<p>In order to promote best practices and high quality computational models, the CoMSES Net Computational Model Library allows authors of models in the library to request peer-review for Certification.</p>\n\n<p>As a member of CoMSES Net, would you be willing to review the model titled: [modelreview:modeltitle] for Certification in the CoMSES Net Computational Model Library? The review process is not intensive. It involves a review of the programming code and documentation to ensure it meets some basic standards for readability and whether the model runs correctly and does what it is stated to do. More information on the Model Certification standards and review process is available here: [modelreview:reviewinfo].</p>\n\n<p>The model can be viewed at: [modelreview:modelurl].</p>\n\n<p>You can accept or decline this invitation by following this link: [modelreview:statusurl]. If you cannot review the model, when you submit your response on the Review Invitation page, can you also suggest alternative reviewers?</p>\n\n<p>PLEASE CONFIRM THAT YOU ARE OR ARE NOT ABLE TO REVIEW THIS MODEL. THANK YOU!</p>\n\n* * * * * * \n\n<p>A brief description of the model you are asked to review follows:</p>\n\n<h2>[modelreview:modeltitle]:</h2><p>[modelreview:modeldesc]</p>\n \n\n* * * * * * \n\n<p>Sincerely,<br />\nMichael Barton</p>'),
  ('reviewer_rereview', 'reviewer', 'user', 'Your Model Review Case requires a Re-Review', 'A model you have reviewed, [modelreview:modeltitle], has been revised by the author, and the author has requested a re-review of their case to determine if the model now meets the requirements for certification. You may access this review case by visiting: [modelreview:statusurl]'),
  ('review_accepted', 'manage review', 'perm', 'Reviewer has accepted Model Review case', 'The reviewer invited to handle the review case for the model, [modelreview:modeltitle], has accepted the review invitation. They should be completing the model review shortly, at which time you will be notified of the new status. To view the model review case: [modelreview:statusurl]'),
  ('review_completed', 'manage review', 'perm', 'Model Review has been completed', 'The model review case for the model, [modelreview:modeltitle], has been completed by the assigned Reviewer. The reviewer''s notes and recommendation need to be processed by an Editor, and the case processed as needed. You may access this review case by browsing: [modelreview:statusurl]'),
  ('review_declined', 'manage review', 'perm', 'Reviewer has declined Model Review case', 'The reviewer invited to handle the review case for the model, [modelreview:modeltitle], has declined the review invitation. A new reviewer needs to be selected and assigned to this case. To view the model review case and the declining reviewer''s notes, if any provided, on possible alternate reviewers can be viewed at the following link: [modelreview:statusurl]'),
  ('review_requested', 'manage review', 'perm', 'Model Review has been requested', 'The author of the model, [modelreview:modeltitle], has requested a Model Review. A Reviewer needs to be assigned to this case, in order for it to proceed. You may access this case by visiting: [modelreview:statusurl]'),
  ('revision_needed', 'author', 'user', 'Model Review has been completed, Revisions Requested', 'The model review case for your model, [modelreview:modeltitle], has been completed by the assigned Reviewer. Before your model can be certified, the CoMSES Reviewer has requested some revisions be made to your model in order to fully meet Modeling Best Practices. To review the notes and recommendation for your case, please visit the Model Review Status Page at: [modelreview:statusurl]');";

  db_query($sql);
}


/**
 * Implementation of hook_uninstall
 */
function modelreview_uninstall() {
  variable_del('modelreview_system_enabled');
  variable_del('modelreview_emails_enabled');
  menu_rebuild();
}


function modelreview_schema() {
  $schema['modelreview'] = array(
    'description' => 'Table for individual model reviews',
    'fields' => array(
      'rid' => array(
        'description' => 'The primary identifier for a particular review cycle.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'sid' => array(
        'description' => 'The unique step identifier for the current action in the review process.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'model_nid' => array(
        'description' => 'The node id for the model being reviewed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    ),
    'indexes' => array(
      'model_nid'  => array('model_nid'),
    ),
    'primary key'  => array('rid'),
  );

  $schema['modelreview_action'] = array(
    'description' => 'Table for action updates during model reviews',
    'fields' => array(
      'rid' => array(
        'description' => 'The primary identifier for a particular review cycle.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => 'The unique step identifier for the current action in the review process.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'related' => array(
        'description' => 'The sid of previous actions related to this action.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'modelversion_nid' => array(
        'description' => 'The model version node id for the model being reviewed.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'statusid' => array(
        'description' => 'The status code for this step in the model review process.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'statusdate' => array(
        'description' => 'The datetime stamp for this review step.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'reviewer' => array(
        'description' => 'The user id of the reviewer that processed this model review step.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'code_clean' => array(
        'description' => 'Option list: Is the model code clean?',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'code_commented' => array(
        'description' => 'Option list: Is the code commented?',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'model_documented' => array(
        'description' => 'Option list: Is the model documented?',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'model_runs' => array(
        'description' => 'Option list: Does the model run?',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'code_notes' => array(
        'description' => 'Reviewer notes on the code.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'doc_notes' => array(
        'description' => 'Reviewer notes on the documentation.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'editor_notes' => array(
        'description' => 'Editor notes for Author.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'other_notes' => array(
        'description' => 'Reviewer notes to the Editor.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'recommendation' => array(
        'description' => 'Option list: Reviewer Recommendation',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL,
      ),
    ),
    'indexes' => array(
      'modelversion_nid'  => array('modelversion_nid'),
    ),
    'unique keys' => array(
      'id_sid'            => array('rid', 'sid'),
    ),
    'primary key'         => array('sid'),
  );

  $schema['modelreview_actiondesc'] = array(
    'description' => 'Table for describing status codes',
    'fields' => array(
      'statusid' => array(
        'description' => 'The primary identifier for a status code.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Text description of the status.',
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('statusid'),
  );

  $schema['modelreview_compliance'] = array(
    'description' => 'Table for describing compliance level',
    'fields' => array(
      'cid' => array(
        'description' => 'The primary identifier for a compliance code.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'compliance' => array(
        'description' => 'Text description of the compliance code.',
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('cid'),
  );

  $schema['modelreview_recommend'] = array(
    'description' => 'Table for describing compliance level',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a recommendation code.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'recommendation' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['modelreview_messages'] = array(
    'description' => 'Table for storing email templates',
    'fields' => array(
      'name' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'varchar',
        'length' => 32,
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'recipient' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'varchar',
        'length' => 32,
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'recipient_type' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'varchar',
        'length' => 4,
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'subject' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'varchar',
        'length' => 128,
        'unsigned' => FALSE,
        'not null' => FALSE,
      ),
      'body' => array(
        'description' => 'Text description of the recommendation code.',
        'type' => 'text',
        'unsigned' => FALSE,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'recipient'  => array('recipient'),
      'recipient_type'  => array('recipient_type'),
    ),
    'primary key'  => array('name'),
  );

  return $schema;
}



function modelreview_update_6100() {
  $sql = "UPDATE {modelreview_actiondesc} SET statusid = (statusid * 10)";
  $query1 = db_query($sql);

  $sql = "UPDATE {modelreview_action} SET statusid = (statusid * 10)";
  $query2 = db_query($sql);
  
}

function modelreview_update_7101() {
  $sql = "INSERT INTO {modelreview_actiondesc} (`statusid`, `status`) VALUES
    (23, 'Reviewer Declined Case'),
    (25, 'Reviewer Accepted Case');";
  $query1 = db_query($sql);

  $sql = "UPDATE {modelreview_actiondesc} SET status = 'Invite Reviewer' WHERE statusid = 20;";
  $query2 = db_query($sql);
}

function modelreview_update_7102() {
  $sql = "CREATE TABLE IF NOT EXISTS `modelreview_messages` (
    `name` varchar(32) NOT NULL,
    `recipient` varchar(32) NOT NULL,
    `recipient_type` varchar(4) NOT NULL,
    `subject` varchar(128) DEFAULT NULL,
    `body` text,
    PRIMARY KEY (`name`),
    KEY `destination` (`recipient`,`recipient_type`),
    KEY `name` (`name`)
  ) ENGINE=InnoDB DEFAULT CHARSET=latin1;";

  db_query($sql);

  $sql = "INSERT INTO `modelreview_messages` (`name`, `recipient`, `recipient_type`, `subject`, `body`) VALUES
  ('cert_accepted', 'author', 'user', 'Model Review has been completed, Certified', 'The model review case for your model, [modelreview:modeltitle], has been completed by a CoMSES Reviewer. After reviewing your case, your model has been determined to meet CoMSES Modeling Best-Practices and is now Certified. You may access this review case by visiting the Model Review Status Page at: [modelreview:statusurl]'),
  ('cert_denied', 'author', 'user', 'Model Review has been completed, Certification Denied', 'The model review case for your model, [modelreview:modeltitle], has been completed by a CoMSES Reviewer. Unfortunately, After reviewing your case, your model has been determined to meet CoMSES Modeling Best-Practices and your model cannot be certified. For more information on this please visit the Model Review Status Page at: [modelreview:statusurl]'),
  ('editor_rereview', 'manage review', 'perm', 'Model Re-Review has been requested', 'The author of the model, [modelreview:modeltitle], has completed requested revisions and has requested a Re-Review of their model. The assigned Reviewer has been notified that they need to complete the Re-Review. You may access this case by visiting: [modelreview:statusurl]'),
  ('invite_reviewer', 'reviewer', 'user', 'OpenABM Model for Review: [modelreview:modeltitle]', '<p>Dear CoMSES Member,</p>\n\n<p>In order to promote best practices and high quality computational models, the CoMSES Net Computational Model Library allows authors of models in the library to request peer-review for Certification.</p>\n\n<p>As a member of CoMSES Net, would you be willing to review the model titled: [modelreview:modeltitle] for Certification in the CoMSES Net Computational Model Library? The review process is not intensive. It involves a review of the programming code and documentation to ensure it meets some basic standards for readability and whether the model runs correctly and does what it is stated to do. More information on the Model Certification standards and review process is available here: [modelreview:reviewinfo].</p>\n\n<p>The model can be viewed at: [modelreview:modelurl].</p>\n\n<p>You can accept or decline this invitation by following this link: [modelreview:statusurl]. If you cannot review the model, when you submit your response on the Review Invitation page, can you also suggest alternative reviewers?</p>\n\n<p>PLEASE CONFIRM THAT YOU ARE OR ARE NOT ABLE TO REVIEW THIS MODEL. THANK YOU!</p>\n\n* * * * * * \n\n<p>A brief description of the model you are asked to review follows:</p>\n\n<h2>[modelreview:modeltitle]:</h2><p>[modelreview:modeldesc]</p>\n \n\n* * * * * * \n\n<p>Sincerely,<br />\nMichael Barton</p>'),
  ('reviewer_rereview', 'reviewer', 'user', 'Your Model Review Case requires a Re-Review', 'A model you have reviewed, [modelreview:modeltitle], has been revised by the author, and the author has requested a re-review of their case to determine if the model now meets the requirements for certification. You may access this review case by visiting: [modelreview:statusurl]'),
  ('review_accepted', 'manage review', 'perm', 'Reviewer has accepted Model Review case', 'The reviewer invited to handle the review case for the model, [modelreview:modeltitle], has accepted the review invitation. They should be completing the model review shortly, at which time you will be notified of the new status. To view the model review case: [modelreview:statusurl]'),
  ('review_completed', 'manage review', 'perm', 'Model Review has been completed', 'The model review case for the model, [modelreview:modeltitle], has been completed by the assigned Reviewer. The reviewer''s notes and recommendation need to be processed by an Editor, and the case processed as needed. You may access this review case by browsing: [modelreview:statusurl]'),
  ('review_declined', 'manage review', 'perm', 'Reviewer has declined Model Review case', 'The reviewer invited to handle the review case for the model, [modelreview:modeltitle], has declined the review invitation. A new reviewer needs to be selected and assigned to this case. To view the model review case and the declining reviewer''s notes, if any provided, on possible alternate reviewers can be viewed at the following link: [modelreview:statusurl]'),
  ('review_requested', 'manage review', 'perm', 'Model Review has been requested', 'The author of the model, [modelreview:modeltitle], has requested a Model Review. A Reviewer needs to be assigned to this case, in order for it to proceed. You may access this case by visiting: [modelreview:statusurl]'),
  ('revision_needed', 'author', 'user', 'Model Review has been completed, Revisions Requested', 'The model review case for your model, [modelreview:modeltitle], has been completed by the assigned Reviewer. Before your model can be certified, the CoMSES Reviewer has requested some revisions be made to your model in order to fully meet Modeling Best Practices. To review the notes and recommendation for your case, please visit the Model Review Status Page at: [modelreview:statusurl]');";

  db_query($sql);

}
