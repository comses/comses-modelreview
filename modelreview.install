<?php
// $Id: $


/**
 * Implementation of hook_install
 */
function modelreview_install() {
  drupal_install_schema('modelreview');
  drupal_install_schema('modelreview_action');
  drupal_install_schema('modelreview_actiondesc');
  drupal_install_schema('modelreview_compliance');
  drupal_install_schema('modelreview_recommend');

  $sql = "INSERT INTO {modelreview_actiondesc} (`statusid`, `status`) VALUES
    (10, 'Review Requested'),
    (20, 'Assigned to Reviewer'),
    (30, 'Review Completed'),
    (40, 'Return to Author for Revision'),
    (50, 'Revision Completed, Re-Review Requested'),
    (60, 'Review Closed - Model Certified'),
    (70, 'Review Closed - Certification Denied');";

  db_query($sql);

  $sql = "INSERT INTO {modelreview_compliance} (`cid`, `compliance`) VALUES
    (0, 'Does Not Meet Standards'),
    (1, 'Partially Meets Standards'),
    (2, 'Fully Meets Standards');";

  db_query($sql);

  $sql = "INSERT INTO {modelreview_recommend} (`id`, `recommendation`) VALUES
    (0, 'Do Not Certify (Deny)'),
    (1, 'Revise (Return to Author)'),
    (2, 'Certify (Accept)');";

  db_query($sql);
}


/**
 * Implementation of hook_uninstall
 */
function modelreview_uninstall() {
  variable_del('modelreview_emails_enabled');

  drupal_uninstall_schema('modelreview');
  drupal_uninstall_schema('modelreview_action');
  drupal_uninstall_schema('modelreview_actiondesc');
  drupal_uninstall_schema('modelreview_compliance');
  drupal_uninstall_schema('modelreview_recommend');
  menu_rebuild();
}


function modelreview_schema() {
  $schema['modelreview'] = array(
    'description' => t('Table for individual model reviews'),
    'fields' => array(
      'rid' => array(
        'description' => t('The primary identifier for a particular review cycle.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'sid' => array(
        'description' => t('The unique step identifier for the current action in the review process.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'model_nid' => array(
        'description' => t('The node id for the model being reviewed.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    ),
    'indexes' => array(
      'model_nid'  => array('model_nid'),
    ),
    'primary key'  => array('rid'),
  );

  $schema['modelreview_action'] = array(
    'description' => t('Table for action updates during model reviews'),
    'fields' => array(
      'rid' => array(
        'description' => t('The primary identifier for a particular review cycle.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'sid' => array(
        'description' => t('The unique step identifier for the current action in the review process.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,),
      'related' => array(
        'description' => t('The sid of previous actions related to this action.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,),
      'modelversion_nid' => array(
        'description' => t('The model version node id for the model being reviewed.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'statusid' => array(
        'description' => t('The status code for this step in the model review process.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0),
      'statusdate' => array(
        'description' => t('The datetime stamp for this review step.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0),
      'reviewer' => array(
        'description' => t('The user id of the reviewer that processed this model review step.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
      'code_clean' => array(
        'description' => t('Option list: Is the model code clean?'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
      'code_commented' => array(
        'description' => t('Option list: Is the code commented?'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
      'model_documented' => array(
        'description' => t('Option list: Is the model documented?'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
      'model_runs' => array(
        'description' => t('Option list: Does the model run?'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
      'code_notes' => array(
        'description' => t('Reviewer notes on the code.'),
        'type' => 'text',
        'not null' => FALSE,),
      'doc_notes' => array(
        'description' => t('Reviewer notes on the documentation.'),
        'type' => 'text',
        'not null' => FALSE,),
      'editor_notes' => array(
        'description' => t('Editor notes for Author.'),
        'type' => 'text',
        'not null' => FALSE,),
      'other_notes' => array(
        'description' => t('Reviewer notes to the Editor.'),
        'type' => 'text',
        'not null' => FALSE,),
      'recommendation' => array(
        'description' => t('Option list: Reviewer Recommendation'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => FALSE,
        'default' => NULL),
    ),
    'indexes' => array(
      'modelversion_nid'  => array('modelversion_nid'),
    ),
    'unique keys' => array(
      'id_sid'            => array('rid', 'sid'),
    ),
    'primary key'         => array('sid'),
  );

  $schema['modelreview_actiondesc'] = array(
    'description' => t('Table for describing status codes'),
    'fields' => array(
      'statusid' => array(
        'description' => t('The primary identifier for a status code.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0),
      'status' => array(
        'description' => t('Text description of the status.'),
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,),
    ),
    'primary key' => array('statusid'),
  );

  $schema['modelreview_compliance'] = array(
    'description' => t('Table for describing compliance level'),
    'fields' => array(
      'cid' => array(
        'description' => t('The primary identifier for a compliance code.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0),
      'compliance' => array(
        'description' => t('Text description of the compliance code.'),
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,),
    ),
    'primary key' => array('cid'),
  );

  $schema['modelreview_recommend'] = array(
    'description' => t('Table for describing compliance level'),
    'fields' => array(
      'id' => array(
        'description' => t('The primary identifier for a recommendation code.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0),
      'recommendation' => array(
        'description' => t('Text description of the recommendation code.'),
        'type' => 'varchar',
        'length' => 255,
        'unsigned' => FALSE,
        'not null' => FALSE,),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}



function modelreview_update_6100() {
  $sql = "UPDATE {modelreview_actiondesc} SET statusid = (statusid * 10)";
  $query1 = db_query($sql);

  $sql = "UPDATE {modelreview_action} SET statusid = (statusid * 10)";
  $query2 = db_query($sql);
  
}

